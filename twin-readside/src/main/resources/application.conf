akka {
  loglevel = "DEBUG"
}

my-app {
  routes {
    # If ask takes more time than this to complete the request is failed
    ask-timeout = 5s
  }
}


# Copyright 2016 Dennis Vriend
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.



slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = "localhost"
    url = "jdbc:postgresql://"${slick.db.host}":5432/docker?reWriteBatchedInserts=true"
    url = ${?postgresql_url}"?reWriteBatchedInserts=true"
    user = "changeme"
    user = ${?postgresql_username}
    password = "changeme"
    password = ${?postgresql_password}
    driver = "org.postgresql.Driver"
    numThreads = 10
    maxConnections = 10
    minConnections = 1
  }
}



slick_read_side {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = "localhost"
    url = "jdbc:postgresql://"${slick.db.host}":5432/docker?reWriteBatchedInserts=true"
    url = ${?postgresql_url_readside}"?reWriteBatchedInserts=true"
    user = "changeme"
    user = ${?postgresql_username_readside}
    password = "changeme"
    password = ${?postgresql_password_readside}
    driver = "org.postgresql.Driver"
    numThreads = 10
    maxConnections = 10
    minConnections = 1
  }
}  

# for interaction with db in projections etc
scalikejdbc.global {
  loggingSQLErrors = true
  loggingConnections = false
}

# These settings configure the database connection for ScalikeJDBC and the akka-persistence-jdbc plugin
jdbc-connection-settings {
  driver = "org.postgresql.Driver"

  # the following properties must be filled with the production values
  # they can be set using -D arguments, eg: -jdbc-connection-settings.user=the-production-user
  url = ${slick_read_side.db.url}
  user = ${slick_read_side.db.user}
  password = ${slick_read_side.db.password}


  # the following properties are used to configure the
  # Hikari connection pool used on the read-side (akka-projections)
  connection-pool {
    # How many connections should be available to from the pool?
    # it's recommended to use the same value used by the blocking-jdbc-dispatcher (see above), only relevant if projection uses these database connections, this is not the case here
    max-pool-size = 10

    # How long should we wait (in millis) before it times out?
    # In a normal scenario, we should always be able to get a connection
    # If we got a thread from the blocking-jdbc-dispatcher, we should be able to get a connection.
    # If for some reason the pool can't provide a connection, it's better to let it crash and liberate the current thread.
    # Hence the low timout (note, 250 is lowest value hikari accepts)
    timeout = 250ms
  }
}
